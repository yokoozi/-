#include <bits/stdc++.h>
typedef long long ll;
typedef long double ld;
const int INF=1e9,MOD=1e9+7,ohara=1e6+10;
const ll LINF=1e18;
using namespace std;
    
#define rep(i,n) for(int (i)=0;(i)<(int)(n);(i)++)
#define rrep(i,a,b) for(int i=(a);i<(b);i++)
#define rrrep(i,a,b) for(int i=(a);i>=(b);i--)
#define all(v) (v).begin(), (v).end()
#define Size(n) (n).size()
#define Cout(x) cout<<(x)<<endl
#define doublecout(a) cout<<fixed<<setprecision(15)<<a<<endl;
#define Cerr(x) cerr<<(x)<<endl
#define fi first
#define se second
#define P pair<ll,ll> 
#define m_p make_pair
#define V vector<ll> 
#define U_MAP unordered_map<ll,ll>
#define pq priority_queue<ll>
#define rpq priority_queue<ll,vector<ll>,greater<ll>>
#define p_b push_back
    
ll n,cnt,ans,a,b,c,d,tmp,tmpp,m,h,w,x,y,sum,pos,k,q;
ld doua;
int dy[]={1,0,-1,0};
int dx[]={0,1,0,-1};
//int dy[]={-1,0,1,-1,1,-1,0,1};
//int dx[]={-1,-1,-1,0,0,1,1,1};
string alph("abcdefghijklmnopqrstuvwxyz"),s;
bool fl;
struct edge{int to,cost;};
ll dat[ohara];
ll bucket[ohara];
const int B=1000;
    
//------ Believe yourself as a genius!!!!!! ------
    
int main(void){
    cin.tie(0);
    cout.tie(0);
    ios::sync_with_stdio(false);
    
    cin>>n>>q;
    rep(i,q){
        cin>>a>>b>>c;
        //閉区間です
        if(a==0){
            b--;
            //index-bにcを加算
            dat[b]+=c;
            bucket[b/B]+=c;
        }
        else{
            //index-[b,c]内の総和ansを求める
            b--;c--;
            ans=0;
            //端を揃えます
            while(1){
                if(b>c)break;
                if(b%B==0)break;
                ans+=dat[b];
                b++;
            }
            while(1){
                if(b>c)break;
                ans+=dat[c];
                if(c%B==0)break;
                c--;
            }
            //終わり

            //バケットをみる
            while(1){
                if(b==c||b>c)break;
                int bb=b/B;
                ans+=bucket[bb];
                b+=B;
            }
            //
            Cout(ans);
        }
    }
    return 0;
}