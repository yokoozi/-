#include <bits/stdc++.h>

#define rep(i,n) for(long long int (i)=0;(i)<(int)(n);(i)++)
#define rrep(i,a,b) for(long long int i=(a);i<(b);i++)
#define rrrep(i,a,b) for(long long int i=(a);i>=(b);i--)
#define all(v) (v).begin(), (v).end()
#define pb(q) push_back(q)
#define Abs(a,b) max(a,b)-min(a,b)
#define YES(condition) if(condition){cout << "YES" << endl;}else{cout << "NO" << endl;}
#define Yes(condition) if(condition){cout << "Yes" << endl;}else{cout << "No" << endl;}
#define Cout(x) cout<<(x)<<endl
#define POSSIBLE(condition) if(condition){cout << "POSSIBLE" << endl;}else{cout << "IMPOSSIBLE" << endl;}
#define Possible(condition) if(condition){cout << "Possible" << endl;}else{cout << "Impossible" << endl;}
#define possible(condition) if(condition){cout << "possible" << endl;}else{cout << "impossible" << endl;}
#define Size(n) (n).size()

typedef long long ll;


using namespace std;

const int INF = 1e9,MOD = 1e9 + 7;
const ll LINF = 1e18;

/*---------------------------------------------------------------
long long int kaizyo(long long int hh){
    cmp=1;
    while(hh>1){
        cmp=(cmp*hh)%MOD;
        hh--;
    }
    return cmp;
}
long long int ruizyo(long long int aa, long long int bb){
    if(aa==0){
        return 1;
    }
    else if(aa%2==0){
        long long int tt=ruizyo(aa/2,bb);
        return (tt*tt)%MOD;
    }
    else{
        return (ruizyo(aa-1,bb)*bb)%MOD;
    }
}フェルマ−のア
---------------------------------------------------------------

while(x!=0){
            sum+=x%10;
          / x/=10;
        }
        各桁の和
---------------------------------------------------------------

pair<int,int> p[100000];
cin >> tmp;
p[i]=make_pair(tmp,i);
cout << p[i].second+1 << endl;//ペアの右側つまりiを出力
---------------------------------------------------------------

s.find(w[i])==string::npos
findの使い方
---------------------------------------------------------------

for(int i=0;i<n;i++){
    b[i]=x%2;
    x/=2;
  }二進数
---------------------------------------------------------------

bool f[100001];//1000000以下の素数を調べよう！
rrep(i,2,100001){
       f[i]=false;
    }
rrep(i,2,100001){
        if(!f[i]){
            for(int j=i+i;j<=100000;j+=i){
                f[j]=true;
            }
        }
    }
    for(int i=3;i<=100000;i+=2){
        if(!f[i]){
            c[i]++;
        }
    }
---------------------------------------------------------------

visited=vector<vector<bool>>(10,vector<bool>(10,false));アを全部falseに
---------------------------------------------------------------

long long gcd(long long aaa,long long bbb){
    if(bbb==0){
        return aaa;
    }
    return gcd(bbb,aaa%bbb);
}
 
long long lcm(long long aaa,long long bbb){
    long long g = gcd(aaa,bbb);
    return aaa/g * bbb;
}左から最大公約数と最小公倍数


---------------------------------------------------------------

long long int prime_cnt[10000];
       for(int i=2;i*i<=n;i++){
           while(n%i==0){
               n/=i;
               prime_cnt[i]+=1;
           }
           if(n>1){
               prime_cnt[n]+=1;
               break;
           }
      }ある数nを素因数分解しましょう

---------------------------------------------------------------
debug:
cout<<"i: "<<i<<" j: "<<j<<" cnt: "<<cnt<<"\n";

---------------------------------------------------------------*/

long long int n,cnt=0,anssecond=0,a,b,c,d,cmp,cmpp,m,h,w,x,y,sum=0,pos,v[1000000],f[1000000],fr[1000000],dp[52][52];
int dy[]={1,0,-1,0};
int dx[]={0,1,0,-1};
string alph("abcdefghijklmnopqrstuvwxyz"),s;
bool fl=true;
struct edge{int to,cost;};

//-------------------------↓↓↓↓↓↓------------------------

ll comb(ll nn,ll k){
    if(nn<k)return 0;
    if(dp[nn][k]!=0)return dp[nn][k];
    if(k==0)return dp[nn][k]=1;
    if(nn==k)return dp[nn][k]=1;
    return dp[nn][k]=comb(nn-1,k-1)+comb(nn-1,k);
}

int main(void){

       cin >> n >> a >> b;
       
       rep(i,n+1){
           rep(j,n+1){
               dp[i][j]=0;
           }
       }

       rep(i,n)cin>>v[i];
       sort(v,v+n);
       reverse(v,v+n);
       double ansfirst=0;
       rep(i,a){
           sum+=v[i];
       }
       cmp=v[0];
       rep(i,a){
           if(cmp!=v[i])fl=false;
       }
       ansfirst=(double)sum/a;
       rrep(i,a,n){
           sum+=v[i];
           if(ansfirst<=((double)sum/(i+1))){ansfirst=(double)sum/(i+1);}
       }
       if(fl){
           cmp=v[a-1];
           cnt=0;
           rep(i,n){
               if(cmp==v[i])cnt++;
           }
           rrep(i,a,b+1){
               anssecond+=comb(cnt,i);
           }
       }
       else{
           cmp=v[a-1];
           ll cntt=0;
           cnt=0;
           rep(i,n){
               if(cmp==v[i]){
                   cnt++;
                   if(i<a){
                       cntt++;
                   }
               }
           }
           anssecond=comb(cnt,cntt);
       }
       printf("%.15f\n",ansfirst);
       Cout(anssecond);
return 0;
}
